{"version":3,"file":"f1-fetcher.js","sources":["webpack://@financier/injections/../../packages/utils/interceptors/sse.ts","webpack://@financier/injections/../../packages/utils/interceptors/create.ts","webpack://@financier/injections/./f1-fetcher.ts","webpack://@financier/injections/../../packages/utils/event.ts"],"sourcesContent":["import {createInterceptor} from \"./create\";\n\ninterface SseInterceptor {\n  (sse: EventSource): void;\n}\n\nconst pusher = createInterceptor<EventSource>(interceptors => {\n  const OriginalEventSource = window.EventSource;\n\n  class OverrideEventSource implements EventSource {\n\n    private readonly src: EventSource;\n\n    constructor(url: string | URL, config?: EventSourceInit) {\n      const src = new OriginalEventSource(url, config);\n      for (let i = 0; i < interceptors.length; i++) {\n        interceptors[i](src);\n      }\n      this.src = src;\n    }\n\n    /* read-write properties */\n\n    get onerror() {\n      return this.src.onerror;\n    }\n\n    set onerror(value) {\n      this.src.onerror = value;\n    }\n\n    get onmessage() {\n      return this.src.onmessage;\n    }\n\n    set onmessage(value) {\n      this.src.onmessage = value;\n    }\n\n    get onopen() {\n      return this.src.onopen;\n    }\n\n    set onopen(value) {\n      this.src.onopen = value;\n    }\n\n    /* readonly properties */\n\n    get readyState() {\n      return this.src.readyState;\n    };\n\n    get url() {\n      return this.src.url;\n    };\n\n    get withCredentials() {\n      return this.src.withCredentials;\n    };\n\n    CONNECTING: 0 = 0;\n    OPEN: 1 = 1;\n    CLOSED: 2 = 2;\n\n    /* methods */\n\n    close(): void {\n      this.src.close();\n    }\n\n    addEventListener<K extends keyof EventSourceEventMap>(type: K, listener: (this: EventSource, ev: EventSourceEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: (this: EventSource, event: MessageEvent) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: any, listener: any, options?: boolean | AddEventListenerOptions): void {\n      this.src.addEventListener(type, listener, options);\n    }\n\n    removeEventListener<K extends keyof EventSourceEventMap>(type: K, listener: (this: EventSource, ev: EventSourceEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: (this: EventSource, event: MessageEvent) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: any, listener: any, options?: any): void {\n      this.src.removeEventListener(type, listener, options);\n    }\n\n    dispatchEvent(event: Event): boolean {\n      return this.src.dispatchEvent(event);\n    }\n  }\n\n  window.EventSource = OverrideEventSource as any;\n});\n\nexport function onSse(sseInterceptor: SseInterceptor) {\n  pusher(sseInterceptor);\n}\n","export function createInterceptor<T>(creator: (interceptors: ((instance: T) => void)[]) => void) {\n  const interceptors: ((instance: T) => void)[] = [];\n  creator(interceptors);\n  return function pusher(interceptor: (instance: T) => void) {\n    if (typeof interceptor === 'function') {\n      interceptors.push(interceptor);\n    }\n  }\n}\n","import {onSse} from \"@shared/utils/interceptors/sse\";\nimport {onEventListener} from \"@shared/utils/event\";\n\nonSse(sse => {\n  if ((sse.url || '').includes('/api/qt/stock/details/sse')) {\n    const messagesList: any[] = [];\n    (window as any)[process.env.IM_F1_MONITOR_MESSAGES] = messagesList;\n    onEventListener(sse, 'message', event => {\n      messagesList.push(event.data);\n      // console.log('Received:', event.data);\n    });\n  }\n});\n\n","export function onEventListener<K extends keyof HTMLElementEventMap>(elem: HTMLElement, eventName: K, handler: (ev: HTMLElementEventMap[K]) => void, options?: boolean | AddEventListenerOptions): void;\nexport function onEventListener<K extends keyof ElementEventMap>(elem: Element, eventName: K, handler: (ev: ElementEventMap[K]) => void, options?: boolean | AddEventListenerOptions): void;\nexport function onEventListener<K extends keyof DocumentEventMap>(dom: Document, eventName: K, handler: (ev: DocumentEventMap[K]) => void, options?: boolean | AddEventListenerOptions): void;\nexport function onEventListener<K extends keyof WindowEventMap>(dom: Window, eventName: K, handler: (ev: WindowEventMap[K]) => void, options?: boolean | AddEventListenerOptions): void;\nexport function onEventListener<K extends keyof EventSourceEventMap>(dom: EventSource, eventName: K, handler: (ev: EventSourceEventMap[K]) => void, options?: boolean | AddEventListenerOptions): void;\n// export function onEventListener<K extends keyof AbortSignalEventMap>(dom: AbortSignal, eventName: K, handler: (ev: AbortSignalEventMap[K]) => void, options?: boolean | AddEventListenerOptions): void;\n// export function onEventListener<K extends keyof AnimationEventMap>(dom: Animation, eventName: K, handler: (ev: AnimationEventMap[K]) => void, options?: boolean | AddEventListenerOptions): void;\nexport function onEventListener(target: EventTarget, eventName: string, handler: EventListener, options?: boolean | AddEventListenerOptions): void;\nexport function onEventListener(target: EventTarget, type: string, handler: EventListener, options?: {\n  capture?: boolean;\n  once?: boolean;\n  passive?: boolean;\n  signal?: AbortSignal;\n} | boolean): void {\n  target.addEventListener(type, handler, options);\n}\n"],"names":["pusher","createInterceptor","creator","interceptors","interceptor","OriginalEventSource","window","OverrideEventSource","value","type","listener","options","event","url","config","src","i","sse","messagesList","process","onEventListener","target","handler"],"mappings":"2UAMA,IAAMA,EAASC,ACNR,SAA8BC,CAA0D,EAC7F,IAAMC,EAA0C,EAAE,CAElD,OADAD,EAAQC,GACD,SAAgBC,CAAkC,EAC5B,YAAvB,OAAOA,GACTD,EAAa,IAAI,CAACC,EAEtB,CACF,EDF8CD,AAAAA,IAC5C,IAAME,EAAsBC,OAAO,WAAW,AAmF9CA,CAAAA,OAAO,WAAW,CAjFlB,MAAMC,EAcJ,IAAI,SAAU,CACZ,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,AACzB,CAEA,IAAI,QAAQC,CAAK,CAAE,CACjB,IAAI,CAAC,GAAG,CAAC,OAAO,CAAGA,CACrB,CAEA,IAAI,WAAY,CACd,OAAO,IAAI,CAAC,GAAG,CAAC,SAAS,AAC3B,CAEA,IAAI,UAAUA,CAAK,CAAE,CACnB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAGA,CACvB,CAEA,IAAI,QAAS,CACX,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,AACxB,CAEA,IAAI,OAAOA,CAAK,CAAE,CAChB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAGA,CACpB,CAIA,IAAI,YAAa,CACf,OAAO,IAAI,CAAC,GAAG,CAAC,UAAU,AAC5B,CAEA,IAAI,KAAM,CACR,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,AACrB,CAEA,IAAI,iBAAkB,CACpB,OAAO,IAAI,CAAC,GAAG,CAAC,eAAe,AACjC,CAQA,OAAc,CACZ,IAAI,CAAC,GAAG,CAAC,KAAK,EAChB,CAKA,iBAAiBC,CAAS,CAAEC,CAAa,CAAEC,CAA2C,CAAQ,CAC5F,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAACF,EAAMC,EAAUC,EAC5C,CAKA,oBAAoBF,CAAS,CAAEC,CAAa,CAAEC,CAAa,CAAQ,CACjE,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAACF,EAAMC,EAAUC,EAC/C,CAEA,cAAcC,CAAY,CAAW,CACnC,OAAO,IAAI,CAAC,GAAG,CAAC,aAAa,CAACA,EAChC,CA1EA,YAAYC,CAAiB,CAAEC,CAAwB,CAAE,CAFzD,OAAiB,MAAjB,QAkDA,oBAAgB,GAChB,cAAU,GACV,gBAAY,GAjDV,IAAMC,EAAM,IAAIV,EAAoBQ,EAAKC,GACzC,IAAK,IAAIE,EAAI,EAAGA,EAAIb,EAAa,MAAM,CAAEa,IACvCb,CAAY,CAACa,EAAE,CAACD,EAElB,KAAI,CAAC,GAAG,CAAGA,CACb,CAqEF,CAGF,GAGEf,EE3FIiB,AAAAA,IACJ,GAAKA,AAAAA,CAAAA,EAAI,GAAG,EAAI,EAAC,EAAG,QAAQ,CAAC,6BAA8B,CACzD,IAAMC,EAAsB,EAAE,AAC7BZ,CAAAA,MAAc,CAACa,0BAAmC,CAAGD,GACtDE,ACCG,SAAyBC,CAAmB,CAAEZ,CAAY,CAAEa,CAAsB,CAAEX,CAKhF,EACTU,EAAO,gBAAgB,CAACZ,EAAMa,EAN2DX,KAAAA,EAO3F,EDRoBM,EAAK,UAAWL,AAAAA,IAC9BM,EAAa,IAAI,CAACN,EAAM,IAAI,CAE9B,EACF,CACF,E"}